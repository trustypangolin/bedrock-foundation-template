---
#============================================================================================================================================
# Description : EC2 and RDS Scheduler
# Author      :
# Date        : 2022-03-04
# Version     : 1.0.0
# Command Line:
# aws cloudformation --profile %CUSTOMERPREFIX%-central-admin \
# aws cloudformation --profile v2-central-sso \
#                    deploy \
#                    --stack-name bedrock-central-lambda-instance-scheduler \
#                    --template-file ./02-central-services/03-custom-lambda/central-25-lambda-instance-scheduler.yml \
#                    --capabilities CAPABILITY_NAMED_IAM \
#                    --tags Version=1.0.0 Service=bedrock Environment=Central \
#                    --parameter-overrides SNSNotificationAccountId=%AUDITACCOUNT% \
#                                          Regions=ap-southeast-2,ap-southeast-1
#                                          CrossAccountRoles=arn:aws:iam::%AUDITACCOUNT%:role/SchedulerRemote
#                                          ,arn:aws:iam::%TESTINGACCOUNT%:role/SchedulerRemote,arn:aws:iam::%DEVELOPMENTACCOUNT%:role/SchedulerRemote
#============================================================================================================================================
#============================================================================================================================================
# License     : Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#               Licensed under the Apache License Version 2.0 (the "License"). You may not use this file except in compliance with the
#               License. A copy of the License is located at http://www.apache.org/licenses/
#               or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
#               CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions and limitations
#               under the License.
#============================================================================================================================================
AWSTemplateFormatVersion: "2010-09-09"
Description: "(SO0030) - The AWS CloudFormation template for deployment of the aws-instance-scheduler, version: v1.4.1"
#==========================================================================================================================================
#                                             METADATA
#==========================================================================================================================================
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Scheduler (version v1.4.0)
        Parameters:
          - TagName
          - ScheduledServices
          - ScheduleRdsClusters
          - CreateRdsSnapshot
          - SchedulingActive
          - Regions
          - DefaultTimezone
          - CrossAccountRoles
          - ScheduleLambdaAccount
          - SchedulerFrequency
          - MemorySize
      - Label:
          default: Options
        Parameters:
          - UseCloudWatchMetrics
          - Trace
          - EnableSSMMaintenanceWindows
      - Label:
          default: Other parameters
        Parameters:
          - LogRetentionDays
          - StartedTags
          - StoppedTags
    ParameterLabels:
      LogRetentionDays:
        default: Log retention days
      StartedTags:
        default: Started tags
      StoppedTags:
        default: Stopped tags
      SchedulingActive:
        default: Scheduling enabled
      CrossAccountRoles:
        default: Cross-account roles
      ScheduleLambdaAccount:
        default: This account
      UseCloudWatchMetrics:
        default: Enable CloudWatch Metrics
      Trace:
        default: Enable CloudWatch Logs
      EnableSSMMaintenanceWindows:
        default: Enable SSM Maintenance windows
      TagName:
        default: Instance Scheduler tag name
      ScheduledServices:
        default: Service(s) to schedule
      ScheduleRdsClusters:
        default: Schedule Aurora Clusters
      CreateRdsSnapshot:
        default: Create RDS instance snapshot
      DefaultTimezone:
        default: Default time zone
      SchedulerFrequency:
        default: Frequency
      Regions:
        default: Region(s)
      MemorySize:
        default: Memory size

#============================================================================================================================================
#                                             Parameters
#============================================================================================================================================
Parameters:
  Prefix:
    Description: "Resource Prefix"
    Type: String

  SNSDeadLetterTopic:
    Description: "The arn where SNS DeadLetter should be sent"
    Type: String

  # SNSNotificationAccountId:
  #   Description: "The account id where SNS and SQS should be sent. Generally rhe security or audit account"
  #   Type: String

  # SNSNotificationRegion:
  #   Default: "ap-southeast-2"
  #   Type: String
  #   Description: Account Region for the SNS notifications

  CustomSchedules:
    Default: "No"
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
  #--------------------------------------------------------------------------------------------------

  SchedulingActive:
    Default: "Yes"
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Description: Activate or deactivate scheduling.

  ScheduledServices:
    Default: Both
    Type: String
    AllowedValues:
      - EC2
      - RDS
      - Both
    Description: Scheduled Services.

  ScheduleRdsClusters:
    Default: "Yes"
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Description: Enable scheduling of Aurora clusters for RDS Service.

  CreateRdsSnapshot:
    Default: "No"
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Description: Create snapshot before stopping RDS instances (does not apply to Aurora Clusters).

  MemorySize:
    Default: 128
    Type: Number
    AllowedValues:
      - 128
      - 384
      - 512
      - 640
      - 768
      - 896
      - 1024
      - 1152
      - 1280
      - 1408
      - 1536
    Description: Size of the Lambda function running the scheduler, increase size
      when processing large numbers of instances.

  UseCloudWatchMetrics:
    Default: "No"
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Description: Collect instance scheduling data using CloudWatch metrics.

  LogRetentionDays:
    Default: 3
    Type: Number
    AllowedValues:
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 60
      - 90
      - 120
      - 150
      - 180
      - 365
      - 400
      - 545
      - 731
      - 1827
      - 3653
    Description: Retention days for scheduler logs.

  Trace:
    Default: "No"
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Description: Enable logging of detailed information in CloudWatch logs.

  EnableSSMMaintenanceWindows:
    Default: "Yes"
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Description: Enable the solution to load SSM Maintenance Windows, so that they
      can be used for EC2 instance Scheduling.

  TagName:
    Default: Schedule
    Type: String
    Description: Name of tag to use for associating instance schedule schemas with
      service instances.
    MaxLength: 127
    MinLength: 1

  DefaultTimezone:
    Default: Australia/Brisbane
    Type: String
    AllowedValues:
      - Africa/Abidjan
      - Africa/Accra
      - Africa/Addis_Ababa
      - Africa/Algiers
      - Africa/Asmara
      - Africa/Bamako
      - Africa/Bangui
      - Africa/Banjul
      - Africa/Bissau
      - Africa/Blantyre
      - Africa/Brazzaville
      - Africa/Bujumbura
      - Africa/Cairo
      - Africa/Casablanca
      - Africa/Ceuta
      - Africa/Conakry
      - Africa/Dakar
      - Africa/Dar_es_Salaam
      - Africa/Djibouti
      - Africa/Douala
      - Africa/El_Aaiun
      - Africa/Freetown
      - Africa/Gaborone
      - Africa/Harare
      - Africa/Johannesburg
      - Africa/Juba
      - Africa/Kampala
      - Africa/Khartoum
      - Africa/Kigali
      - Africa/Kinshasa
      - Africa/Lagos
      - Africa/Libreville
      - Africa/Lome
      - Africa/Luanda
      - Africa/Lubumbashi
      - Africa/Lusaka
      - Africa/Malabo
      - Africa/Maputo
      - Africa/Maseru
      - Africa/Mbabane
      - Africa/Mogadishu
      - Africa/Monrovia
      - Africa/Nairobi
      - Africa/Ndjamena
      - Africa/Niamey
      - Africa/Nouakchott
      - Africa/Ouagadougou
      - Africa/Porto-Novo
      - Africa/Sao_Tome
      - Africa/Tripoli
      - Africa/Tunis
      - Africa/Windhoek
      - America/Adak
      - America/Anchorage
      - America/Anguilla
      - America/Antigua
      - America/Araguaina
      - America/Argentina/Buenos_Aires
      - America/Argentina/Catamarca
      - America/Argentina/Cordoba
      - America/Argentina/Jujuy
      - America/Argentina/La_Rioja
      - America/Argentina/Mendoza
      - America/Argentina/Rio_Gallegos
      - America/Argentina/Salta
      - America/Argentina/San_Juan
      - America/Argentina/San_Luis
      - America/Argentina/Tucuman
      - America/Argentina/Ushuaia
      - America/Aruba
      - America/Asuncion
      - America/Atikokan
      - America/Bahia
      - America/Bahia_Banderas
      - America/Barbados
      - America/Belem
      - America/Belize
      - America/Blanc-Sablon
      - America/Boa_Vista
      - America/Bogota
      - America/Boise
      - America/Cambridge_Bay
      - America/Campo_Grande
      - America/Cancun
      - America/Caracas
      - America/Cayenne
      - America/Cayman
      - America/Chicago
      - America/Chihuahua
      - America/Costa_Rica
      - America/Creston
      - America/Cuiaba
      - America/Curacao
      - America/Danmarkshavn
      - America/Dawson
      - America/Dawson_Creek
      - America/Denver
      - America/Detroit
      - America/Dominica
      - America/Edmonton
      - America/Eirunepe
      - America/El_Salvador
      - America/Fortaleza
      - America/Glace_Bay
      - America/Godthab
      - America/Goose_Bay
      - America/Grand_Turk
      - America/Grenada
      - America/Guadeloupe
      - America/Guatemala
      - America/Guayaquil
      - America/Guyana
      - America/Halifax
      - America/Havana
      - America/Hermosillo
      - America/Indiana/Indianapolis
      - America/Indiana/Knox
      - America/Indiana/Marengo
      - America/Indiana/Petersburg
      - America/Indiana/Tell_City
      - America/Indiana/Vevay
      - America/Indiana/Vincennes
      - America/Indiana/Winamac
      - America/Inuvik
      - America/Iqaluit
      - America/Jamaica
      - America/Juneau
      - America/Kentucky/Louisville
      - America/Kentucky/Monticello
      - America/Kralendijk
      - America/La_Paz
      - America/Lima
      - America/Los_Angeles
      - America/Lower_Princes
      - America/Maceio
      - America/Managua
      - America/Manaus
      - America/Marigot
      - America/Martinique
      - America/Matamoros
      - America/Mazatlan
      - America/Menominee
      - America/Merida
      - America/Metlakatla
      - America/Mexico_City
      - America/Miquelon
      - America/Moncton
      - America/Monterrey
      - America/Montevideo
      - America/Montreal
      - America/Montserrat
      - America/Nassau
      - America/New_York
      - America/Nipigon
      - America/Nome
      - America/Noronha
      - America/North_Dakota/Beulah
      - America/North_Dakota/Center
      - America/North_Dakota/New_Salem
      - America/Ojinaga
      - America/Panama
      - America/Pangnirtung
      - America/Paramaribo
      - America/Phoenix
      - America/Port-au-Prince
      - America/Port_of_Spain
      - America/Porto_Velho
      - America/Puerto_Rico
      - America/Rainy_River
      - America/Rankin_Inlet
      - America/Recife
      - America/Regina
      - America/Resolute
      - America/Rio_Branco
      - America/Santa_Isabel
      - America/Santarem
      - America/Santiago
      - America/Santo_Domingo
      - America/Sao_Paulo
      - America/Scoresbysund
      - America/Sitka
      - America/St_Barthelemy
      - America/St_Johns
      - America/St_Kitts
      - America/St_Lucia
      - America/St_Thomas
      - America/St_Vincent
      - America/Swift_Current
      - America/Tegucigalpa
      - America/Thule
      - America/Thunder_Bay
      - America/Tijuana
      - America/Toronto
      - America/Tortola
      - America/Vancouver
      - America/Whitehorse
      - America/Winnipeg
      - America/Yakutat
      - America/Yellowknife
      - Antarctica/Casey
      - Antarctica/Davis
      - Antarctica/DumontDUrville
      - Antarctica/Macquarie
      - Antarctica/Mawson
      - Antarctica/McMurdo
      - Antarctica/Palmer
      - Antarctica/Rothera
      - Antarctica/Syowa
      - Antarctica/Vostok
      - Arctic/Longyearbyen
      - Asia/Aden
      - Asia/Almaty
      - Asia/Amman
      - Asia/Anadyr
      - Asia/Aqtau
      - Asia/Aqtobe
      - Asia/Ashgabat
      - Asia/Baghdad
      - Asia/Bahrain
      - Asia/Baku
      - Asia/Bangkok
      - Asia/Beirut
      - Asia/Bishkek
      - Asia/Brunei
      - Asia/Choibalsan
      - Asia/Chongqing
      - Asia/Colombo
      - Asia/Damascus
      - Asia/Dhaka
      - Asia/Dili
      - Asia/Dubai
      - Asia/Dushanbe
      - Asia/Gaza
      - Asia/Harbin
      - Asia/Hebron
      - Asia/Ho_Chi_Minh
      - Asia/Hong_Kong
      - Asia/Hovd
      - Asia/Irkutsk
      - Asia/Jakarta
      - Asia/Jayapura
      - Asia/Jerusalem
      - Asia/Kabul
      - Asia/Kamchatka
      - Asia/Karachi
      - Asia/Kashgar
      - Asia/Kathmandu
      - Asia/Khandyga
      - Asia/Kolkata
      - Asia/Krasnoyarsk
      - Asia/Kuala_Lumpur
      - Asia/Kuching
      - Asia/Kuwait
      - Asia/Macau
      - Asia/Magadan
      - Asia/Makassar
      - Asia/Manila
      - Asia/Muscat
      - Asia/Nicosia
      - Asia/Novokuznetsk
      - Asia/Novosibirsk
      - Asia/Omsk
      - Asia/Oral
      - Asia/Phnom_Penh
      - Asia/Pontianak
      - Asia/Pyongyang
      - Asia/Qatar
      - Asia/Qyzylorda
      - Asia/Rangoon
      - Asia/Riyadh
      - Asia/Sakhalin
      - Asia/Samarkand
      - Asia/Seoul
      - Asia/Shanghai
      - Asia/Singapore
      - Asia/Taipei
      - Asia/Tashkent
      - Asia/Tbilisi
      - Asia/Tehran
      - Asia/Thimphu
      - Asia/Tokyo
      - Asia/Ulaanbaatar
      - Asia/Urumqi
      - Asia/Ust-Nera
      - Asia/Vientiane
      - Asia/Vladivostok
      - Asia/Yakutsk
      - Asia/Yekaterinburg
      - Asia/Yerevan
      - Atlantic/Azores
      - Atlantic/Bermuda
      - Atlantic/Canary
      - Atlantic/Cape_Verde
      - Atlantic/Faroe
      - Atlantic/Madeira
      - Atlantic/Reykjavik
      - Atlantic/South_Georgia
      - Atlantic/St_Helena
      - Atlantic/Stanley
      - Australia/Adelaide
      - Australia/Brisbane
      - Australia/Broken_Hill
      - Australia/Currie
      - Australia/Darwin
      - Australia/Eucla
      - Australia/Hobart
      - Australia/Lindeman
      - Australia/Lord_Howe
      - Australia/Melbourne
      - Australia/Perth
      - Australia/Sydney
      - Canada/Atlantic
      - Canada/Central
      - Canada/Eastern
      - Canada/Mountain
      - Canada/Newfoundland
      - Canada/Pacific
      - Europe/Amsterdam
      - Europe/Andorra
      - Europe/Athens
      - Europe/Belgrade
      - Europe/Berlin
      - Europe/Bratislava
      - Europe/Brussels
      - Europe/Bucharest
      - Europe/Budapest
      - Europe/Busingen
      - Europe/Chisinau
      - Europe/Copenhagen
      - Europe/Dublin
      - Europe/Gibraltar
      - Europe/Guernsey
      - Europe/Helsinki
      - Europe/Isle_of_Man
      - Europe/Istanbul
      - Europe/Jersey
      - Europe/Kaliningrad
      - Europe/Kiev
      - Europe/Lisbon
      - Europe/Ljubljana
      - Europe/London
      - Europe/Luxembourg
      - Europe/Madrid
      - Europe/Malta
      - Europe/Mariehamn
      - Europe/Minsk
      - Europe/Monaco
      - Europe/Moscow
      - Europe/Oslo
      - Europe/Paris
      - Europe/Podgorica
      - Europe/Prague
      - Europe/Riga
      - Europe/Rome
      - Europe/Samara
      - Europe/San_Marino
      - Europe/Sarajevo
      - Europe/Simferopol
      - Europe/Skopje
      - Europe/Sofia
      - Europe/Stockholm
      - Europe/Tallinn
      - Europe/Tirane
      - Europe/Uzhgorod
      - Europe/Vaduz
      - Europe/Vatican
      - Europe/Vienna
      - Europe/Vilnius
      - Europe/Volgograd
      - Europe/Warsaw
      - Europe/Zagreb
      - Europe/Zaporozhye
      - Europe/Zurich
      - GMT
      - Indian/Antananarivo
      - Indian/Chagos
      - Indian/Christmas
      - Indian/Cocos
      - Indian/Comoro
      - Indian/Kerguelen
      - Indian/Mahe
      - Indian/Maldives
      - Indian/Mauritius
      - Indian/Mayotte
      - Indian/Reunion
      - Pacific/Apia
      - Pacific/Auckland
      - Pacific/Chatham
      - Pacific/Chuuk
      - Pacific/Easter
      - Pacific/Efate
      - Pacific/Enderbury
      - Pacific/Fakaofo
      - Pacific/Fiji
      - Pacific/Funafuti
      - Pacific/Galapagos
      - Pacific/Gambier
      - Pacific/Guadalcanal
      - Pacific/Guam
      - Pacific/Honolulu
      - Pacific/Johnston
      - Pacific/Kiritimati
      - Pacific/Kosrae
      - Pacific/Kwajalein
      - Pacific/Majuro
      - Pacific/Marquesas
      - Pacific/Midway
      - Pacific/Nauru
      - Pacific/Niue
      - Pacific/Norfolk
      - Pacific/Noumea
      - Pacific/Pago_Pago
      - Pacific/Palau
      - Pacific/Pitcairn
      - Pacific/Pohnpei
      - Pacific/Port_Moresby
      - Pacific/Rarotonga
      - Pacific/Saipan
      - Pacific/Tahiti
      - Pacific/Tarawa
      - Pacific/Tongatapu
      - Pacific/Wake
      - Pacific/Wallis
      - US/Alaska
      - US/Arizona
      - US/Central
      - US/Eastern
      - US/Hawaii
      - US/Mountain
      - US/Pacific
      - UTC
    Description: Choose the default Time Zone. Default is 'UTC'.

  Regions:
    Type: CommaDelimitedList
    Description: List of regions in which instances are scheduled, leave blank for
      current region only.
    Default: "ap-southeast-2,us-west-2,eu-west-2"

  CrossAccountRoles:
    Type: CommaDelimitedList
    Description: Comma separated list of ARN's for cross account access roles. These
      roles must be created in all checked accounts the scheduler to start and stop
      instances.
    Default: "arn:aws:iam::%PRODUCTIONACCOUNT%:role/bedrock-SchedulerRemote,arn:aws:iam::%TESTINGACCOUNT%:role/bedrock-SchedulerRemote,arn:aws:iam::%DEVELOPMENTACCOUNT%:role/bedrock-SchedulerRemote"

  StartedTags:
    Type: String
    Description: Comma separated list of tagname and values on the formt name=value,name=value,..
      that are set on started instances
    Default: ""

  StoppedTags:
    Type: String
    Description: Comma separated list of tagname and values on the formt name=value,name=value,..
      that are set on stopped instances
    Default: ""

  SchedulerFrequency:
    Default: "5"
    Type: String
    AllowedValues:
      - "1"
      - "2"
      - "5"
      - "10"
      - "15"
      - "30"
      - "60"
    Description: Scheduler running frequency in minutes.

  ScheduleLambdaAccount:
    Default: "No"
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Description: Schedule instances in this account.

#==========================================================================================================================================
#                                             Conditions
#==========================================================================================================================================
Conditions:
  ActivateCustomSchedules: !Equals [!Ref CustomSchedules, "Yes"]

#==========================================================================================================================================
#                                             MAPPINGS
#==========================================================================================================================================
Mappings:
  mappings:
    TrueFalse:
      "Yes": "True"
      "No": "False"
    EnabledDisabled:
      "Yes": ENABLED
      "No": DISABLED
    Services:
      EC2: ec2
      RDS: rds
      Both: ec2,rds
    Timeouts:
      "1": cron(0/1 * * * ? *)
      "2": cron(0/2 * * * ? *)
      "5": cron(0/5 * * * ? *)
      "10": cron(0/10 * * * ? *)
      "15": cron(0/15 * * * ? *)
      "30": cron(0/30 * * * ? *)
      "60": cron(0 0/1 * * ? *)
    Settings:
      MetricsUrl: https://metrics.awssolutionsbuilder.com/generic
      MetricsSolutionId: S00030
  Send:
    AnonymousUsage:
      Data: "No"
    ParameterKey:
      UniqueId: "/Solutions/aws-instance-scheduler/UUID/"

#==========================================================================================================================================
#                                             Resources
#==========================================================================================================================================
Resources:
  #==========================================================================================================================================
  #                                             CloudWatch LogGroups
  #==========================================================================================================================================
  SchedulerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ""
          - - "/aws/lambda/"
            - !Sub ${Prefix}-AWSInstanceSchedulerMain
      RetentionInDays:
        Ref: LogRetentionDays
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W84
            reason: CloudWatch log groups only have transactional data from the Lambda
              function, this template has to be supported in gov cloud which doesn't
              yet have the feature to provide kms key id to cloudwatch log group.

  #==========================================================================================================================================
  #                                             Roles
  #==========================================================================================================================================
  SchedulerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${Prefix}-AWSInstanceSchedulerRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
                - lambda.amazonaws.com
      Path: "/"

  #==========================================================================================================================================
  #                                             Policy
  #==========================================================================================================================================
  SchedulerRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: SchedulerRoleDefaultPolicy
      Roles:
        - Ref: SchedulerRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: "*"
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - !GetAtt StateTable.Arn
              - Ref: AWS::NoValue
          - Action:
              - dynamodb:DeleteItem
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ConfigTable
                  - Arn
              - Fn::GetAtt:
                  - MaintenanceWindowTable
                  - Arn
          - Action:
              - ssm:PutParameter
              - ssm:GetParameter
            Effect: Allow
            Resource:
              Fn::Sub: arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/Solutions/aws-instance-scheduler/UUID/*
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W12
            reason: Lambda needs the following minimum required permissions to send
              trace data to X-Ray and access ENIs in a VPC.

  instanceschedulerlambdaLambdaFunctionServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:"
                      - Ref: AWS::Partition
                      - ":logs:"
                      - Ref: AWS::Region
                      - ":"
                      - Ref: AWS::AccountId
                      - ":log-group:/aws/lambda/*"
            Version: "2012-10-17"
          PolicyName: LambdaFunctionServiceRolePolicy

  Ec2Permissions:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: ec2:ModifyInstanceAttribute
            Effect: Allow
            Resource:
              Fn::Sub: arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:instance/*
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::Sub: arn:${AWS::Partition}:iam::*:role/${Prefix}-SchedulerRemote
        Version: "2012-10-17"
      PolicyName: Ec2Permissions
      Roles:
        - Ref: SchedulerRole

  EC2DynamoDBPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ssm:GetParameter
              - ssm:GetParameters
            Effect: Allow
            Resource:
              Fn::Sub: arn:${AWS::Partition}:ssm:*:${AWS::AccountId}:parameter/*
          - Action:
              - cloudwatch:PutMetricData
              - ec2:DescribeInstances
              - ec2:DescribeRegions
              - logs:DescribeLogStreams
              - rds:DescribeDBClusters
              - rds:DescribeDBInstances
              - ssm:DescribeMaintenanceWindows
              - tag:GetResources
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:PutRetentionPolicy
            Effect: Allow
            Resource:
              - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*
              - Fn::GetAtt:
                  - SchedulerLogGroup
                  - Arn
        Version: "2012-10-17"
      PolicyName: EC2DynamoDBPolicy
      Roles:
        - Ref: SchedulerRole
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W12
            reason: All policies have been scoped to be as restrictive as possible.
              This solution needs to access ec2/rds resources across all regions.

  SchedulerPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: SchedulerPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - rds:AddTagsToResource
              - rds:RemoveTagsFromResource
              - rds:DescribeDBSnapshots
              - rds:StartDBInstance
              - rds:StopDBInstance
            Effect: Allow
            Resource:
              Fn::Sub: arn:${AWS::Partition}:rds:*:${AWS::AccountId}:db:*
          - Action:
              - ec2:StartInstances
              - ec2:StopInstances
              - ec2:CreateTags
              - ec2:DeleteTags
            Effect: Allow
            Resource:
              Fn::Sub: arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:instance/*
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::Sub: arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${Prefix}-AWSInstanceSchedulerMain
          - Action:
              - kms:GenerateDataKey*
              - kms:Decrypt
            Effect: Allow
            Resource:
              - "*"
          - Sid: AllowLambdaDeadLetterSNS
            Effect: Allow
            Action:
              - "sns:Publish"
            Resource: !Ref SNSDeadLetterTopic # "arn:aws:sns:*:*:deadletter"
      Roles:
        - Ref: SchedulerRole

  SchedulerRDSPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: SchedulerRDSPolicy
      PolicyDocument:
        Statement:
          - Action:
              - rds:DeleteDBSnapshot
              - rds:DescribeDBSnapshots
              - rds:StopDBInstance
            Effect: Allow
            Resource:
              Fn::Sub: arn:${AWS::Partition}:rds:*:${AWS::AccountId}:snapshot:*
          - Action:
              - rds:AddTagsToResource
              - rds:RemoveTagsFromResource
              - rds:StartDBCluster
              - rds:StopDBCluster
            Effect: Allow
            Resource:
              Fn::Sub: arn:${AWS::Partition}:rds:*:${AWS::AccountId}:cluster:*
        Version: "2012-10-17"
      Roles:
        - Ref: SchedulerRole

  #==========================================================================================================================================
  #                                             Lambda Function
  #==========================================================================================================================================
  Main:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${Prefix}-AWSInstanceSchedulerMain
      Code:
        S3Bucket:
          Fn::Join:
            - ""
            - - solutions-
              - Ref: AWS::Region
        S3Key: aws-instance-scheduler/v1.4.1/instance-scheduler.zip
      DeadLetterConfig:
        TargetArn: !Ref SNSDeadLetterTopic # arn:aws:sns:${SNSNotificationRegion}:${SNSNotificationAccountId}:deadletter
      Role: !GetAtt SchedulerRole.Arn
      Description: EC2 and RDS instance scheduler, version v1.4.1
      Handler: main.lambda_handler
      MemorySize: !Ref MemorySize
      Runtime: python3.7
      Timeout: 300
      Environment:
        Variables:
          ACCOUNT: !Ref AWS::AccountId
          BOTO_RETRY: "5,10,30,0.25"
          CONFIG_TABLE: !Ref ConfigTable
          DDB_TABLE_NAME: !Ref StateTable
          ENV_BOTO_RETRY_LOGGING: "FALSE"
          ISSUES_TOPIC_ARN: !Ref SNSDeadLetterTopic # arn:aws:sns:${SNSNotificationRegion}:${SNSNotificationAccountId}:deadletter
          LOG_GROUP: !Ref SchedulerLogGroup
          MAINTENANCE_WINDOW_TABLE: !Ref MaintenanceWindowTable
          SCHEDULER_FREQUENCY: !Ref SchedulerFrequency
          STACK_NAME: !Ref AWS::StackName
          START_EC2_BATCH_SIZE: "5"
          STATE_TABLE: !Ref StateTable
          TAG_NAME: !Ref TagName
          SEND_METRICS:
            Fn::FindInMap:
              - mappings
              - TrueFalse
              - Fn::FindInMap:
                  - Send
                  - AnonymousUsage
                  - Data
          SOLUTION_ID:
            Fn::FindInMap:
              - mappings
              - Settings
              - MetricsSolutionId
          TRACE:
            Fn::FindInMap:
              - mappings
              - TrueFalse
              - Ref: Trace
          ENABLE_SSM_MAINTENANCE_WINDOWS:
            Fn::FindInMap:
              - mappings
              - TrueFalse
              - Ref: EnableSSMMaintenanceWindows
          USER_AGENT:
            Fn::Join:
              - ""
              - - InstanceScheduler-
                - Ref: AWS::StackName
                - "-v1.4.0"
          USER_AGENT_EXTRA: AwsSolution/SO0030/v1.4.0
          METRICS_URL:
            Fn::FindInMap:
              - mappings
              - Settings
              - MetricsUrl
          STACK_ID: !Ref AWS::StackId
          UUID_KEY:
            Fn::FindInMap:
              - Send
              - ParameterKey
              - UniqueId
      TracingConfig:
        Mode: Active
    DependsOn:
      - EC2DynamoDBPolicy
      - Ec2Permissions
      - SchedulerPolicy
      - SchedulerRDSPolicy
      - SchedulerRoleDefaultPolicy
      - SchedulerRole
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: This Lambda function does not need to access any resource provisioned
              within a VPC.
          - id: W58
            reason: This Lambda function has permission provided to write to CloudWatch
              logs using the iam roles.
          - id: W92
            reason: Lambda function is only used by the event rule periodically, concurrent
              calls are very limited.

  #==========================================================================================================================================
  #                                             Lambda Permissions
  #==========================================================================================================================================
  SchedulerInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt Main.Arn
      Principal: events.amazonaws.com
      SourceArn: !GetAtt SchedulerRule.Arn

  #==========================================================================================================================================
  #                                             Event Rules
  #==========================================================================================================================================
  SchedulerRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Instance Scheduler - Rule to trigger instance for scheduler function
        version v1.4.0
      ScheduleExpression:
        Fn::FindInMap:
          - mappings
          - Timeouts
          - Ref: SchedulerFrequency
      State:
        Fn::FindInMap:
          - mappings
          - EnabledDisabled
          - Ref: SchedulingActive
      Targets:
        - Arn: !GetAtt Main.Arn
          Id: Target0

  #==========================================================================================================================================
  #                                             Dynamo Tables
  #==========================================================================================================================================
  StateTable:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: service
          KeyType: HASH
        - AttributeName: account-region
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: service
          AttributeType: S
        - AttributeName: account-region
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

  ConfigTable:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: type
          KeyType: HASH
        - AttributeName: name
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: type
          AttributeType: S
        - AttributeName: name
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

  MaintenanceWindowTable:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: Name
          KeyType: HASH
        - AttributeName: account-region
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: Name
          AttributeType: S
        - AttributeName: account-region
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

  #==========================================================================================================================================
  #                                             Custom Service
  #==========================================================================================================================================
  SchedulerConfigHelper:
    Type: Custom::ServiceSetup
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - Main
          - Arn
      timeout: 120
      config_table:
        Ref: ConfigTable
      tagname:
        Ref: TagName
      default_timezone:
        Ref: DefaultTimezone
      use_metrics:
        Fn::FindInMap:
          - mappings
          - TrueFalse
          - Ref: UseCloudWatchMetrics
      scheduled_services:
        Fn::Split:
          - ","
          - Fn::FindInMap:
              - mappings
              - Services
              - Ref: ScheduledServices
      schedule_clusters:
        Fn::FindInMap:
          - mappings
          - TrueFalse
          - Ref: ScheduleRdsClusters
      create_rds_snapshot:
        Fn::FindInMap:
          - mappings
          - TrueFalse
          - Ref: CreateRdsSnapshot
      regions:
        Ref: Regions
      cross_account_roles:
        Ref: CrossAccountRoles
      schedule_lambda_account:
        Fn::FindInMap:
          - mappings
          - TrueFalse
          - Ref: ScheduleLambdaAccount
      trace:
        Fn::FindInMap:
          - mappings
          - TrueFalse
          - Ref: Trace
      enable_SSM_maintenance_windows:
        Fn::FindInMap:
          - mappings
          - TrueFalse
          - Ref: EnableSSMMaintenanceWindows
      log_retention_days:
        Ref: LogRetentionDays
      started_tags:
        Ref: StartedTags
      stopped_tags:
        Ref: StoppedTags
      stack_version: v1.4.0
    DependsOn:
      - SchedulerLogGroup
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

  # WaitHandle:
  #   Type: AWS::CloudFormation::WaitConditionHandle
  #   DependsOn: Main
  #   Properties:

  # ConditionHandle:
  #   Type: AWS::CloudFormation::WaitCondition
  #   DependsOn: Main
  #   Properties:
  #     Handle: !Ref "WaitHandle"
  #     Timeout: 900

  #==========================================================================================================================================
  #                                             Custom Schedules
  #==========================================================================================================================================
  SydneyOfficeHours:
    Condition: ActivateCustomSchedules
    Type: "Custom::ServiceInstanceSchedule"
    Properties:
      Name: AU-SYD-OfficeHours
      NoStackPrefix: "True"
      Description: Office hours in Sydney
      ServiceToken:
        Fn::GetAtt:
          - Main
          - Arn
      Enforced: "True"
      Timezone: Australia/Sydney
      Periods:
        - Description: Opening hours on weekdays
          BeginTime: "08:00"
          EndTime: "18:00"
          WeekDays: Mon-Fri

  SydneyClosingHours:
    Condition: ActivateCustomSchedules
    Type: "Custom::ServiceInstanceSchedule"
    Properties:
      Name: AU-SYD-ClosingHours
      NoStackPrefix: "True"
      Description: Stop Only Schedule in Sydney
      ServiceToken:
        Fn::GetAtt:
          - Main
          - Arn
      Enforced: "True"
      Timezone: Australia/Sydney
      Periods:
        - Description: Stop Only Time
          EndTime: "17:00"
          WeekDays: Mon-Sun

  OregonOfficeHours:
    Condition: ActivateCustomSchedules
    Type: "Custom::ServiceInstanceSchedule"
    Properties:
      Name: US-Oregon-OfficeHours
      NoStackPrefix: "True"
      Description: Office hours in Oregon
      ServiceToken:
        Fn::GetAtt:
          - Main
          - Arn
      Enforced: "True"
      Timezone: America/Boise
      Periods:
        - Description: Opening hours on weekdays
          BeginTime: "08:00"
          EndTime: "18:00"
          WeekDays: Mon-Fri

  OregonClosingHours:
    Condition: ActivateCustomSchedules
    Type: "Custom::ServiceInstanceSchedule"
    Properties:
      Name: US-Oregon-ClosingHours
      NoStackPrefix: "True"
      Description: Stop Only Schedule in Oregon
      ServiceToken:
        Fn::GetAtt:
          - Main
          - Arn
      Enforced: "True"
      Timezone: America/Boise
      Periods:
        - Description: Stop Only Time
          EndTime: "17:00"
          WeekDays: Mon-Sun

  LondonOfficeHours:
    Condition: ActivateCustomSchedules
    Type: "Custom::ServiceInstanceSchedule"
    Properties:
      Name: EU-London-OfficeHours
      NoStackPrefix: "True"
      Description: Office hours in London
      ServiceToken:
        Fn::GetAtt:
          - Main
          - Arn
      Enforced: "True"
      Timezone: Europe/London
      Periods:
        - Description: Opening hours on weekdays
          BeginTime: "08:00"
          EndTime: "18:00"
          WeekDays: Mon-Fri

  LondonClosingHours:
    Condition: ActivateCustomSchedules
    Type: "Custom::ServiceInstanceSchedule"
    Properties:
      Name: EU-London-ClosingHours
      NoStackPrefix: "True"
      Description: Stop Only Schedule in London
      ServiceToken:
        Fn::GetAtt:
          - Main
          - Arn
      Enforced: "True"
      Timezone: Europe/London
      Periods:
        - Description: Stop Only Time
          EndTime: "17:00"
          WeekDays: Mon-Sun

  BrisbaneOfficeHours:
    Condition: ActivateCustomSchedules
    Type: "Custom::ServiceInstanceSchedule"
    Properties:
      Name: AU-BNE-OfficeHours
      NoStackPrefix: "True"
      Description: Office hours in Brisbane
      ServiceToken:
        Fn::GetAtt:
          - Main
          - Arn
      Enforced: "True"
      Timezone: Australia/Brisbane
      Periods:
        - Description: Opening hours on weekdays
          BeginTime: "08:00"
          EndTime: "18:00"
          WeekDays: Mon-Fri

  BrisbaneClosingHours:
    Condition: ActivateCustomSchedules
    Type: "Custom::ServiceInstanceSchedule"
    Properties:
      Name: AU-BNE-ClosingHours
      NoStackPrefix: "True"
      Description: Stop Only Schedule in Brisbane
      ServiceToken:
        Fn::GetAtt:
          - Main
          - Arn
      Enforced: "True"
      Timezone: Australia/Brisbane
      Periods:
        - Description: Stop Only Time
          EndTime: "17:00"
          WeekDays: Mon-Sun

#==========================================================================================================================================
#                                             Outputs
#==========================================================================================================================================
Outputs:
  ConfigurationTable:
    Description: Name of the DynamoDB configuration table
    Value: !GetAtt ConfigTable.Arn

  SchedulerRoleArn:
    Description: Role for the instance scheduler lambda function
    Value: !GetAtt SchedulerRole.Arn

  ServiceInstanceScheduleServiceToken:
    Description: Arn to use as ServiceToken property for custom resource type Custom::ServiceInstanceSchedule
    Value: !GetAtt Main.Arn
